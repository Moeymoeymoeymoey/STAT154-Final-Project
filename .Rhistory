PosNegTrain.y = stars.train
PosNegTest.y = stars.test
PosNegTrain.business.id = business.id.train
PosNegTest.business.id = business.id.test
summary(rowSums(PosNegTrain.X))
PosNegTrain.manywordsindex = rowSums(PosNegTrain.X) >= 9
PosNegTrain.X = PosNegTrain.X[PosNegTrain.manywordsindex,]
PosNegTrain.y = PosNegTrain.y[PosNegTrain.manywordsindex]
PosNegTrain.business.id = PosNegTrain.business.id[PosNegTrain.manywordsindex]
PosNegTrain.data = data.frame(as.data.frame(PosNegTrain.X), stars = PosNegTrain.y)
PosNegTest.data = as.data.frame(PosNegTest.X)
save.image("file=+wwordsnewdataset.Rdata")
library(randomForest)
rfModel<-randomForest(PosNegTrain.X, as.factor(PosNegTrain.y), ntree=90)
save.image(file="+-wordsrf.Rdata")
rfPredictions<-predict(rfModel,newdata=PosNegTest.X)
rfPredictions = as.numeric(rfPredictions)
rfEPE = mean((rfPredictions - PosNegTest.y)^2)
rfEPE
PosNegFinal.X = test.mcterms[,which(colnames(test.mcterms) %in% PosNegWords)]
PosNegFinal.business.id = yelp.test$business_id
rfPredictions.Final<-predict(rfModel,newdata=PosNegFinal.X)
rfPredictions.Final = as.numeric(rfPredictions.Final)
hist(rfPredictions.Final)
dfrf_Final = data.frame(business_id = as.character(PosNegFinal.business.id),
stars =  rfPredictions.Final)
write.csv(file="dfrf_Final.csv")
dfrf_Final
modeltree <- rpart(PosNegTrain.X~., data=PosNegTrain.manywordsindex)
library(rpart)
modeltree <- rpart(PosNegTrain.X~., data=PosNegTrain.manywordsindex)
modeltree <- rpart(PosNegTrain.X~PosNegTrain.y)
class(PosNegTrain.y)
modeltree <- rpart(PosNegTrain.X~PosNegTrain.y)
?rpart
modeltree <- rpart(PosNegTrain.y~PosNegTrain.X)
rpartpredictions <- predict(modeltree, newdata = PosNegTest.X)
rpartpredictions <- predict(modeltree, newdata = PosNegTest.data)
dim(PosNegTest.data)
dim(PosNegTrain.data)
rpartpredictions <- predict(modeltree,PosNegTest.data)
names(PosNegTrain.data )
modeltree <- rpart(stars~., data=PosNegTrain.data)
rpartpredictions <- predict(modeltree,PosNegTest.data)
modeltree
library(rpart.plot)
rpart.plot(modeltree)
names(PosNegTrain.data)
names(PosNegTrain.data)[1:200] = names(PosNegTest.data)
names(PosNegTrain.data)[1:200] == names(PosNegTest.data)
all(names(PosNegTrain.data)[1:200] == names(PosNegTest.data))
PosNegTest.data = as.data.frame(PosNegTest.X)
all(names(PosNegTrain.data)[1:200] == names(PosNegTest.data))
rpartpredictions <- predict(modeltree, newdata = PosNegTest.data)
class(PosNegTest.data)
class(PosNegTrain.data$stars)
modeltree
rpartpredictions <- predict(modeltree,PosNegTest.data, type = "class")
PosNegTest.data
?rpart
rpartpredictions <- predict(modeltree,PosNegTest.data, type = "class")
class(PosNegTest.data)
rpartpredictions <- predict(modeltree,PosNegTest.X, type = "class")
rpartpredictions <- predict(modeltree,PosNegTest.data, type = "class")
head(PosNegTrain.data)
modeltree
load("+-wordstextmining.Rdata")
library(stringr)
train <- read.csv("yelp_academic_dataset_business_train.csv", header = TRUE)
test <- read.csv("yelp_academic_dataset_business_test.csv", header = TRUE)
stars = train[,14]
test <- test[,-2]
business <- rbind(train[,-14], test)
pitts_res_unique <- business
pitts_res_unique$Category.Bars <- as.integer(str_detect(pitts_res_unique$categories, "Bars"))
pitts_res_unique$Category.American__New_ <- as.integer(str_detect(pitts_res_unique$categories, "American (New)"))
pitts_res_unique$Category.Sandwiches <- as.integer(str_detect(pitts_res_unique$categories, "Sandwiches"))
pitts_res_unique$Category.Mexican <- as.integer(str_detect(pitts_res_unique$categories, "Mexican"))
pitts_res_unique$Category.Japanese <- as.integer(str_detect(pitts_res_unique$categories, "Japanese"))
pitts_res_unique$Category.Sushi_Bars <- as.integer(str_detect(pitts_res_unique$categories, "Sushi Bars"))
pitts_res_unique$Category.American__Traditional_ <- as.integer(str_detect(pitts_res_unique$categories, "American (Traditional)"))
pitts_res_unique$Category.Specialty_Food <- as.integer(str_detect(pitts_res_unique$categories, "Specialty Food"))
pitts_res_unique$Category.Local_Flavor <- as.integer(str_detect(pitts_res_unique$categories, "Local Flavor"))
pitts_res_unique$Category.Italian <- as.integer(str_detect(pitts_res_unique$categories, "Italian"))
pitts_res_unique$Category.Pizza <- as.integer(str_detect(pitts_res_unique$categories, "Pizza"))
pitts_res_unique$Category.Cafes <- as.integer(str_detect(pitts_res_unique$categories, "Cafes"))
pitts_res_unique$Category.Fast_Food <- as.integer(str_detect(pitts_res_unique$categories, "Fast Food"))
pitts_res_unique$Category.Breakfast___Brunch <- as.integer(str_detect(pitts_res_unique$categories, "Breakfast & Brunch"))
pitts_res_unique$Category.Donuts <- as.integer(str_detect(pitts_res_unique$categories, "Donuts"))
pitts_res_unique$Category.Coffee___Tea <- as.integer(str_detect(pitts_res_unique$categories, "Coffee & Tea"))
pitts_res_unique$Category.Seafood <- as.integer(str_detect(pitts_res_unique$categories, "Seafood"))
pitts_res_unique$Category.Bakeries <- as.integer(str_detect(pitts_res_unique$categories, "Bakeries"))
pitts_res_unique$Category.Barbeque <- as.integer(str_detect(pitts_res_unique$categories, "Barbeque"))
pitts_res_unique$Category.Vegan <- as.integer(str_detect(pitts_res_unique$categories, "Vegan"))
pitts_res_unique$Category.Indian <- as.integer(str_detect(pitts_res_unique$categories, "Indian"))
pitts_res_unique$Category.Chinese <- as.integer(str_detect(pitts_res_unique$categories, "Chinese"))
pitts_res_unique$Category.Vegetarian <- as.integer(str_detect(pitts_res_unique$categories, "Vegetarian"))
pitts_res_unique$Category.Latin_American <- as.integer(str_detect(pitts_res_unique$categories, "Latin American"))
pitts_res_unique$Category.Delis <- as.integer(str_detect(pitts_res_unique$categories, "Delis"))
pitts_res_unique$Category.Mediterranean <- as.integer(str_detect(pitts_res_unique$categories, "Mediterranean"))
pitts_res_unique$Category.Greek <- as.integer(str_detect(pitts_res_unique$categories, "Greek"))
pitts_res_unique$Category.Middle_Eastern <- as.integer(str_detect(pitts_res_unique$categories, "Middle Eastern"))
pitts_res_unique$Category.Desserts <- as.integer(str_detect(pitts_res_unique$categories, "Desserts"))
pitts_res_unique$Category.Food_Trucks <- as.integer(str_detect(pitts_res_unique$categories, "Food Trucks"))
pitts_res_unique$Category.Burgers <- as.integer(str_detect(pitts_res_unique$categories, "Burgers"))
pitts_res_unique$Category.Hot_Dogs <- as.integer(str_detect(pitts_res_unique$categories, "Hot Dogs"))
pitts_res_unique$Category.Steakhouses <- as.integer(str_detect(pitts_res_unique$categories, "Steakhouses"))
pitts_res_unique$Category.Soup <- as.integer(str_detect(pitts_res_unique$categories, "Soup"))
pitts_res_unique$Category.Noodles <- as.integer(str_detect(pitts_res_unique$categories, "Noodles"))
pitts_res_unique$Category.Buffets <- as.integer(str_detect(pitts_res_unique$categories, "Buffets"))
pitts_res_unique$Category.Thai <- as.integer(str_detect(pitts_res_unique$categories, "Thai"))
pitts_res_unique$Category.Cafeteria <- as.integer(str_detect(pitts_res_unique$categories, "Cafeteria"))
pitts_res_unique$Category.Diners <- as.integer(str_detect(pitts_res_unique$categories, "Diners"))
pitts_res_unique$Category.Korean <- as.integer(str_detect(pitts_res_unique$categories, "Korean"))
pitts_res_unique$Category.French <- as.integer(str_detect(pitts_res_unique$categories, "French"))
pitts_res_unique$Category.Tex_Mex <- as.integer(str_detect(pitts_res_unique$categories, "Tex-Mex"))
pitts_res_unique$Category.Caribbean <- as.integer(str_detect(pitts_res_unique$categories, "Caribbean"))
pitts_res_unique$Category.Beer <- as.integer(str_detect(pitts_res_unique$categories, "Beer"))
pitts_res_unique$Category.Ramen <- as.integer(str_detect(pitts_res_unique$categories, "Ramen"))
pitts_res_unique$Category.Vietnamese <- as.integer(str_detect(pitts_res_unique$categories, "Vietnamese"))
pitts_res_unique$Category.Spanish <- as.integer(str_detect(pitts_res_unique$categories, "Spanish"))
pitts_res_unique$Category.Taiwanese <- as.integer(str_detect(pitts_res_unique$categories, "Taiwanese"))
pitts_res_unique$Category.Fish___Chips <- as.integer(str_detect(pitts_res_unique$categories, "Fish & Chips"))
pitts_res_unique$Category.Tacos <- as.integer(str_detect(pitts_res_unique$categories, "Tacos"))
pitts_res_unique$Category.Hot_Pot <- as.integer(str_detect(pitts_res_unique$categories, "Hot Pot"))
pitts_res_unique$Category.Cantonese <- as.integer(str_detect(pitts_res_unique$categories, "Cantonese"))
pitts_res_unique$Attribute.BusinessAcceptsCreditCards__True <- as.integer(str_detect(pitts_res_unique$attributes, "BusinessAcceptsCreditCards: True"))
pitts_res_unique$Attribute.ByAppointmentOnly__True <- as.integer(str_detect(pitts_res_unique$attributes, "ByAppointmentOnly: True"))
pitts_res_unique$Attribute.DogsAllowed__True <- as.integer(str_detect(pitts_res_unique$attributes, "DogsAllowed: True"))
pitts_res_unique$Attribute.DriveThru__True <- as.integer(str_detect(pitts_res_unique$attributes, "DriveThru: True"))
pitts_res_unique$Attribute.GoodForDancing__True <- as.integer(str_detect(pitts_res_unique$attributes, "GoodForDancing: True"))
pitts_res_unique$Attribute.GoodForKids__True <- as.integer(str_detect(pitts_res_unique$attributes, "GoodForKids: True"))
pitts_res_unique$Attribute.HappyHour__True <- as.integer(str_detect(pitts_res_unique$attributes, "HappyHour: True"))
pitts_res_unique$Attribute.HasTV__True <- as.integer(str_detect(pitts_res_unique$attributes, "HasTV: True"))
pitts_res_unique$Attribute.Open24Hours__True <- as.integer(str_detect(pitts_res_unique$attributes, "Open24Hours: True"))
pitts_res_unique$Attribute.OutdoorSeating__True <- as.integer(str_detect(pitts_res_unique$attributes, "OutdoorSeating: True"))
pitts_res_unique$Attribute.RestaurantsAttire__casual <- as.integer(str_detect(pitts_res_unique$attributes, "RestaurantsAttire: casual"))
pitts_res_unique$Attribute.RestaurantsAttire__dressy <- as.integer(str_detect(pitts_res_unique$attributes, "RestaurantsAttire: dressy"))
pitts_res_unique$Attribute.RestaurantsAttire__formal <- as.integer(str_detect(pitts_res_unique$attributes, "RestaurantsAttire: formal"))
pitts_res_unique$Attribute.RestaurantsCounterService__True <- as.integer(str_detect(pitts_res_unique$attributes, "RestaurantsCounterService: True"))
pitts_res_unique$Attribute.RestaurantsDelivery__True <- as.integer(str_detect(pitts_res_unique$attributes, "RestaurantsDelivery: True"))
pitts_res_unique$Attribute.RestaurantsGoodForGroups__True <- as.integer(str_detect(pitts_res_unique$attributes, "RestaurantsGoodForGroups: True"))
pitts_res_unique$Attribute.RestaurantsPriceRange2__1 <- as.integer(str_detect(pitts_res_unique$attributes, "RestaurantsPriceRange2: 1"))
pitts_res_unique$Attribute.RestaurantsPriceRange2__2 <- as.integer(str_detect(pitts_res_unique$attributes, "RestaurantsPriceRange2: 2"))
pitts_res_unique$Attribute.RestaurantsPriceRange2__3 <- as.integer(str_detect(pitts_res_unique$attributes, "RestaurantsPriceRange2: 3"))
pitts_res_unique$Attribute.RestaurantsPriceRange2__4 <- as.integer(str_detect(pitts_res_unique$attributes, "RestaurantsPriceRange2: 4"))
pitts_res_unique$Attribute.RestaurantsReservations__True <- as.integer(str_detect(pitts_res_unique$attributes, "RestaurantsReservations: True"))
pitts_res_unique$Attribute.RestaurantsTableService__True <- as.integer(str_detect(pitts_res_unique$attributes, "RestaurantsTableService: True"))
pitts_res_unique$Attribute.RestaurantsTakeOut__True <- as.integer(str_detect(pitts_res_unique$attributes, "RestaurantsTakeOut: True"))
pitts_res_unique$Attribute.Smoking__yes <- as.integer(str_detect(pitts_res_unique$attributes, "Smoking: yes"))
pitts_res_unique$Attribute.WiFi__free <- as.integer(str_detect(pitts_res_unique$attributes, "WiFi: free"))
pitts_res_unique$Attribute.BusinessParking_street <- as.integer(str_detect(pitts_res_unique$attributes, "'street': True"))
pitts_res_unique$Attribute.Music_dj <- as.integer(str_detect(pitts_res_unique$attributes, "'dj': True"))
pitts_res_unique$neighborhood <- as.factor(pitts_res_unique$neighborhood)
pitts_res_unique.train <- pitts_res_unique[1:nrow(train), ]              #get training set
pitts_res_unique.test <- pitts_res_unique[-c(1:nrow(train)), ]    #get test set
pitts_res_unique.train$stars = stars
pitts_res_unique.train <- pitts_res_unique.train[,-c(1,2,4,5,6,7,8,9,11,12,13,14,1,16)]
pitts_res_unique.test <- pitts_res_unique.test[,-c(1,2,4,5,6,7,8,9,11,12,13,14,1,16)]
set.seed(123)
rindex = sample(1:nrow(pitts_res_unique.train), round(nrow(pitts_res_unique.train)*0.7), replace = FALSE)
pitts_res_unique.train.train = pitts_res_unique.train[rindex,]
pitts_res_unique.train.test = pitts_res_unique.train[-rindex,]
business.train.business_id = pitts_res_unique.train.train$business_id
business.test.business_id = pitts_res_unique.train.test$business_id
set.seed(123)
TrainOrTest = yelp$business_id %in% business.train.business_id
TrainOrTest = yelp$business_id %in% business.train.business_id
yelp = read.csv("yelp_academic_dataset_review_train.csv", header = TRUE)
load("+-wordstextmining.Rdata")
library(stringr)
train <- read.csv("yelp_academic_dataset_business_train.csv", header = TRUE)
test <- read.csv("yelp_academic_dataset_business_test.csv", header = TRUE)
stars = train[,14]
test <- test[,-2]
business <- rbind(train[,-14], test)
pitts_res_unique <- business
pitts_res_unique$Category.Bars <- as.integer(str_detect(pitts_res_unique$categories, "Bars"))
pitts_res_unique$Category.American__New_ <- as.integer(str_detect(pitts_res_unique$categories, "American (New)"))
pitts_res_unique$Category.Sandwiches <- as.integer(str_detect(pitts_res_unique$categories, "Sandwiches"))
pitts_res_unique$Category.Mexican <- as.integer(str_detect(pitts_res_unique$categories, "Mexican"))
pitts_res_unique$Category.Japanese <- as.integer(str_detect(pitts_res_unique$categories, "Japanese"))
pitts_res_unique$Category.Sushi_Bars <- as.integer(str_detect(pitts_res_unique$categories, "Sushi Bars"))
pitts_res_unique$Category.American__Traditional_ <- as.integer(str_detect(pitts_res_unique$categories, "American (Traditional)"))
pitts_res_unique$Category.Specialty_Food <- as.integer(str_detect(pitts_res_unique$categories, "Specialty Food"))
pitts_res_unique$Category.Local_Flavor <- as.integer(str_detect(pitts_res_unique$categories, "Local Flavor"))
pitts_res_unique$Category.Italian <- as.integer(str_detect(pitts_res_unique$categories, "Italian"))
pitts_res_unique$Category.Pizza <- as.integer(str_detect(pitts_res_unique$categories, "Pizza"))
pitts_res_unique$Category.Cafes <- as.integer(str_detect(pitts_res_unique$categories, "Cafes"))
pitts_res_unique$Category.Fast_Food <- as.integer(str_detect(pitts_res_unique$categories, "Fast Food"))
pitts_res_unique$Category.Breakfast___Brunch <- as.integer(str_detect(pitts_res_unique$categories, "Breakfast & Brunch"))
pitts_res_unique$Category.Donuts <- as.integer(str_detect(pitts_res_unique$categories, "Donuts"))
pitts_res_unique$Category.Coffee___Tea <- as.integer(str_detect(pitts_res_unique$categories, "Coffee & Tea"))
pitts_res_unique$Category.Seafood <- as.integer(str_detect(pitts_res_unique$categories, "Seafood"))
pitts_res_unique$Category.Bakeries <- as.integer(str_detect(pitts_res_unique$categories, "Bakeries"))
pitts_res_unique$Category.Barbeque <- as.integer(str_detect(pitts_res_unique$categories, "Barbeque"))
pitts_res_unique$Category.Vegan <- as.integer(str_detect(pitts_res_unique$categories, "Vegan"))
pitts_res_unique$Category.Indian <- as.integer(str_detect(pitts_res_unique$categories, "Indian"))
pitts_res_unique$Category.Chinese <- as.integer(str_detect(pitts_res_unique$categories, "Chinese"))
pitts_res_unique$Category.Vegetarian <- as.integer(str_detect(pitts_res_unique$categories, "Vegetarian"))
pitts_res_unique$Category.Latin_American <- as.integer(str_detect(pitts_res_unique$categories, "Latin American"))
pitts_res_unique$Category.Delis <- as.integer(str_detect(pitts_res_unique$categories, "Delis"))
pitts_res_unique$Category.Mediterranean <- as.integer(str_detect(pitts_res_unique$categories, "Mediterranean"))
pitts_res_unique$Category.Greek <- as.integer(str_detect(pitts_res_unique$categories, "Greek"))
pitts_res_unique$Category.Middle_Eastern <- as.integer(str_detect(pitts_res_unique$categories, "Middle Eastern"))
pitts_res_unique$Category.Desserts <- as.integer(str_detect(pitts_res_unique$categories, "Desserts"))
pitts_res_unique$Category.Food_Trucks <- as.integer(str_detect(pitts_res_unique$categories, "Food Trucks"))
pitts_res_unique$Category.Burgers <- as.integer(str_detect(pitts_res_unique$categories, "Burgers"))
pitts_res_unique$Category.Hot_Dogs <- as.integer(str_detect(pitts_res_unique$categories, "Hot Dogs"))
pitts_res_unique$Category.Steakhouses <- as.integer(str_detect(pitts_res_unique$categories, "Steakhouses"))
pitts_res_unique$Category.Soup <- as.integer(str_detect(pitts_res_unique$categories, "Soup"))
pitts_res_unique$Category.Noodles <- as.integer(str_detect(pitts_res_unique$categories, "Noodles"))
pitts_res_unique$Category.Buffets <- as.integer(str_detect(pitts_res_unique$categories, "Buffets"))
pitts_res_unique$Category.Thai <- as.integer(str_detect(pitts_res_unique$categories, "Thai"))
pitts_res_unique$Category.Cafeteria <- as.integer(str_detect(pitts_res_unique$categories, "Cafeteria"))
pitts_res_unique$Category.Diners <- as.integer(str_detect(pitts_res_unique$categories, "Diners"))
pitts_res_unique$Category.Korean <- as.integer(str_detect(pitts_res_unique$categories, "Korean"))
pitts_res_unique$Category.French <- as.integer(str_detect(pitts_res_unique$categories, "French"))
pitts_res_unique$Category.Tex_Mex <- as.integer(str_detect(pitts_res_unique$categories, "Tex-Mex"))
pitts_res_unique$Category.Caribbean <- as.integer(str_detect(pitts_res_unique$categories, "Caribbean"))
pitts_res_unique$Category.Beer <- as.integer(str_detect(pitts_res_unique$categories, "Beer"))
pitts_res_unique$Category.Ramen <- as.integer(str_detect(pitts_res_unique$categories, "Ramen"))
pitts_res_unique$Category.Vietnamese <- as.integer(str_detect(pitts_res_unique$categories, "Vietnamese"))
pitts_res_unique$Category.Spanish <- as.integer(str_detect(pitts_res_unique$categories, "Spanish"))
pitts_res_unique$Category.Taiwanese <- as.integer(str_detect(pitts_res_unique$categories, "Taiwanese"))
pitts_res_unique$Category.Fish___Chips <- as.integer(str_detect(pitts_res_unique$categories, "Fish & Chips"))
pitts_res_unique$Category.Tacos <- as.integer(str_detect(pitts_res_unique$categories, "Tacos"))
pitts_res_unique$Category.Hot_Pot <- as.integer(str_detect(pitts_res_unique$categories, "Hot Pot"))
pitts_res_unique$Category.Cantonese <- as.integer(str_detect(pitts_res_unique$categories, "Cantonese"))
pitts_res_unique$Attribute.BusinessAcceptsCreditCards__True <- as.integer(str_detect(pitts_res_unique$attributes, "BusinessAcceptsCreditCards: True"))
pitts_res_unique$Attribute.ByAppointmentOnly__True <- as.integer(str_detect(pitts_res_unique$attributes, "ByAppointmentOnly: True"))
pitts_res_unique$Attribute.DogsAllowed__True <- as.integer(str_detect(pitts_res_unique$attributes, "DogsAllowed: True"))
pitts_res_unique$Attribute.DriveThru__True <- as.integer(str_detect(pitts_res_unique$attributes, "DriveThru: True"))
pitts_res_unique$Attribute.GoodForDancing__True <- as.integer(str_detect(pitts_res_unique$attributes, "GoodForDancing: True"))
pitts_res_unique$Attribute.GoodForKids__True <- as.integer(str_detect(pitts_res_unique$attributes, "GoodForKids: True"))
pitts_res_unique$Attribute.HappyHour__True <- as.integer(str_detect(pitts_res_unique$attributes, "HappyHour: True"))
pitts_res_unique$Attribute.HasTV__True <- as.integer(str_detect(pitts_res_unique$attributes, "HasTV: True"))
pitts_res_unique$Attribute.Open24Hours__True <- as.integer(str_detect(pitts_res_unique$attributes, "Open24Hours: True"))
pitts_res_unique$Attribute.OutdoorSeating__True <- as.integer(str_detect(pitts_res_unique$attributes, "OutdoorSeating: True"))
pitts_res_unique$Attribute.RestaurantsAttire__casual <- as.integer(str_detect(pitts_res_unique$attributes, "RestaurantsAttire: casual"))
pitts_res_unique$Attribute.RestaurantsAttire__dressy <- as.integer(str_detect(pitts_res_unique$attributes, "RestaurantsAttire: dressy"))
pitts_res_unique$Attribute.RestaurantsAttire__formal <- as.integer(str_detect(pitts_res_unique$attributes, "RestaurantsAttire: formal"))
pitts_res_unique$Attribute.RestaurantsCounterService__True <- as.integer(str_detect(pitts_res_unique$attributes, "RestaurantsCounterService: True"))
pitts_res_unique$Attribute.RestaurantsDelivery__True <- as.integer(str_detect(pitts_res_unique$attributes, "RestaurantsDelivery: True"))
pitts_res_unique$Attribute.RestaurantsGoodForGroups__True <- as.integer(str_detect(pitts_res_unique$attributes, "RestaurantsGoodForGroups: True"))
pitts_res_unique$Attribute.RestaurantsPriceRange2__1 <- as.integer(str_detect(pitts_res_unique$attributes, "RestaurantsPriceRange2: 1"))
pitts_res_unique$Attribute.RestaurantsPriceRange2__2 <- as.integer(str_detect(pitts_res_unique$attributes, "RestaurantsPriceRange2: 2"))
pitts_res_unique$Attribute.RestaurantsPriceRange2__3 <- as.integer(str_detect(pitts_res_unique$attributes, "RestaurantsPriceRange2: 3"))
pitts_res_unique$Attribute.RestaurantsPriceRange2__4 <- as.integer(str_detect(pitts_res_unique$attributes, "RestaurantsPriceRange2: 4"))
pitts_res_unique$Attribute.RestaurantsReservations__True <- as.integer(str_detect(pitts_res_unique$attributes, "RestaurantsReservations: True"))
pitts_res_unique$Attribute.RestaurantsTableService__True <- as.integer(str_detect(pitts_res_unique$attributes, "RestaurantsTableService: True"))
pitts_res_unique$Attribute.RestaurantsTakeOut__True <- as.integer(str_detect(pitts_res_unique$attributes, "RestaurantsTakeOut: True"))
pitts_res_unique$Attribute.Smoking__yes <- as.integer(str_detect(pitts_res_unique$attributes, "Smoking: yes"))
pitts_res_unique$Attribute.WiFi__free <- as.integer(str_detect(pitts_res_unique$attributes, "WiFi: free"))
pitts_res_unique$Attribute.BusinessParking_street <- as.integer(str_detect(pitts_res_unique$attributes, "'street': True"))
pitts_res_unique$Attribute.Music_dj <- as.integer(str_detect(pitts_res_unique$attributes, "'dj': True"))
pitts_res_unique$neighborhood <- as.factor(pitts_res_unique$neighborhood)
pitts_res_unique.train <- pitts_res_unique[1:nrow(train), ]              #get training set
pitts_res_unique.test <- pitts_res_unique[-c(1:nrow(train)), ]    #get test set
pitts_res_unique.train$stars = stars
pitts_res_unique.train <- pitts_res_unique.train[,-c(1,2,4,5,6,7,8,9,11,12,13,14,1,16)]
pitts_res_unique.test <- pitts_res_unique.test[,-c(1,2,4,5,6,7,8,9,11,12,13,14,1,16)]
set.seed(123)
rindex = sample(1:nrow(pitts_res_unique.train), round(nrow(pitts_res_unique.train)*0.7), replace = FALSE)
pitts_res_unique.train.train = pitts_res_unique.train[rindex,]
pitts_res_unique.train.test = pitts_res_unique.train[-rindex,]
business.train.business_id = pitts_res_unique.train.train$business_id
business.test.business_id = pitts_res_unique.train.test$business_id
set.seed(123)
TrainOrTest = yelp$business_id %in% business.train.business_id
mcterms.train = mcterms[TrainOrTest, ]
mcterms.test = mcterms[!TrainOrTest, ]
business.id.train = yelp$business_id[TrainOrTest]
business.id.test = yelp$business_id[!TrainOrTest]
stars.train = yelp$stars[TrainOrTest]
stars.test = yelp$stars[!TrainOrTest]
posReviewstrain = mcterms.train[(stars.train >= 4), ]
negReviewstrain = mcterms.train[(stars.train <= 2), ]
posReviewstrain = posReviewstrain[rowSums(posReviewstrain) != 0,]
negReviewstrain = negReviewstrain[rowSums(negReviewstrain) != 0,]
posFreqtrain = prop.table(as.matrix(posReviewstrain), margin = 1)
negFreqtrain = prop.table(as.matrix(negReviewstrain), margin = 1)
posColsumstrain = colSums(posFreqtrain)/nrow(posFreqtrain)
negColsumstrain = colSums(negFreqtrain)/nrow(negFreqtrain)
negWords = names(sort(posColsumstrain - negColsumstrain, decreasing = F))[1:100]
posWords = names(sort(posColsumstrain - negColsumstrain, decreasing = T))[1:100]
PosNegWords = c(posWords, negWords)
PosNegTrain.X = mcterms.train[,which(colnames(mcterms) %in% PosNegWords)]
PosNegTest.X = mcterms.test[,which(colnames(mcterms) %in% PosNegWords)]
PosNegTrain.y = stars.train
PosNegTest.y = stars.test
PosNegTrain.business.id = business.id.train
PosNegTest.business.id = business.id.test
summary(rowSums(PosNegTrain.X))
PosNegTrain.manywordsindex = rowSums(PosNegTrain.X) >= 9
PosNegTrain.X = PosNegTrain.X[PosNegTrain.manywordsindex,]
PosNegTrain.y = PosNegTrain.y[PosNegTrain.manywordsindex]
PosNegTrain.business.id = PosNegTrain.business.id[PosNegTrain.manywordsindex]
PosNegTrain.data = data.frame(as.data.frame(PosNegTrain.X), stars = PosNegTrain.y)
PosNegTest.data = as.data.frame(PosNegTest.X)
save.image(file="+wwordsnewdataset.Rdata")
get_review_scores_avg = function(x, dfany) {
business_id = x[1]
if (all(dfany[,1] != business_id)) {
return(3.5)
} else {
return(mean(dfany[which(dfany[,1] == business_id),2]))
}
}
pitts_res_unique.train.train.review_scores_avg = apply(pitts_res_unique.train.train, get_review_scores_avg, dfany = dfrf, MARGIN = 1)
dfrf = data.frame(business_id = as.character(PosNegTest.business.id),
stars =  rfPredictions)
library(randomForest)
library(randomForest)
rfModel<-randomForest(PosNegTrain.X, as.factor(PosNegTrain.y), ntree=90)
rfPredictions<-predict(rfModel,newdata=PosNegTest.X)
rfPredictions = as.numeric(rfPredictions)
rfEPE = mean((rfPredictions - PosNegTest.y)^2)
rfEPE
dfrf = data.frame(business_id = as.character(PosNegTest.business.id),
stars =  rfPredictions)
dfrf.train = data.frame(business_id = as.character(PosNegTrain.business.id),
stars = PosNegTrain.y)
get_review_scores_avg = function(x, dfany) {
business_id = x[1]
if (all(dfany[,1] != business_id)) {
return(3.5)
} else {
return(mean(dfany[which(dfany[,1] == business_id),2]))
}
}
pitts_res_unique.train.train.review_scores_avg = apply(pitts_res_unique.train.train, get_review_scores_avg, dfany = dfrf.train, MARGIN = 1)
pitts_res_unique.train.test.review_scores_avg = apply(pitts_res_unique.train.test, get_review_scores_avg, dfany = dfrf, MARGIN = 1)
pitts_res_unique.train.train.data = data.frame(review_scores_avg = pitts_res_unique.train.train.review_scores_avg,
pitts_res_unique.train.train[,-1])
pitts_res_unique.train.train.business_id = pitts_res_unique.train.train$business_id
pitts_res_unique.train.test.data = data.frame(review_scores_avg = pitts_res_unique.train.test.review_scores_avg,
pitts_res_unique.train.test[,-c(1, ncol(pitts_res_unique.train.test))])
pitts_res_unique.train.test.business_id = pitts_res_unique.train.test$business_id
library(gbm)
gbmModel.BusinessScore<-gbm(stars~.,data=pitts_res_unique.train.train.data, distribution = "tdist",
interaction.depth=4, n.trees=100,shrinkage=.11,verbose=FALSE)
gbm.Pred.BusinessScore<-predict(gbmModel.BusinessScore, newdata=pitts_res_unique.train.test.data,
type="response",n.trees=100)
hist(gbm.Pred.BusinessScore)
business.score.regularize = function(x) {if (is.na(x)) {return (3.5)} else if(x >= 5){return(5)} else if (x <= 1) {return(1)} else {return(round(x*2)/2)}}
gbm.Pred.BusinessScore.regularized = apply(matrix(gbm.Pred.BusinessScore,ncol=1), business.score.regularize, MARGIN = 1)
gbmBusinessScoreEPE = mean((gbm.Pred.BusinessScore.regularized - pitts_res_unique.train.test$stars)^2)
gbmBusinessScoreEPE
rfEPE
rpart.plot(modeltree)
library(rpart)
library(rpart)
load("+wwordsnewdataset.Rdata")
load("+-wordstextmining.Rdata")
library(stringr)
train <- read.csv("yelp_academic_dataset_business_train.csv", header = TRUE)
test <- read.csv("yelp_academic_dataset_business_test.csv", header = TRUE)
stars = train[,14]
test <- test[,-2]
business <- rbind(train[,-14], test)
pitts_res_unique <- business
pitts_res_unique$Category.Bars <- as.integer(str_detect(pitts_res_unique$categories, "Bars"))
pitts_res_unique$Category.American__New_ <- as.integer(str_detect(pitts_res_unique$categories, "American (New)"))
pitts_res_unique$Category.Sandwiches <- as.integer(str_detect(pitts_res_unique$categories, "Sandwiches"))
pitts_res_unique$Category.Mexican <- as.integer(str_detect(pitts_res_unique$categories, "Mexican"))
pitts_res_unique$Category.Japanese <- as.integer(str_detect(pitts_res_unique$categories, "Japanese"))
pitts_res_unique$Category.Sushi_Bars <- as.integer(str_detect(pitts_res_unique$categories, "Sushi Bars"))
pitts_res_unique$Category.American__Traditional_ <- as.integer(str_detect(pitts_res_unique$categories, "American (Traditional)"))
pitts_res_unique$Category.Specialty_Food <- as.integer(str_detect(pitts_res_unique$categories, "Specialty Food"))
pitts_res_unique$Category.Local_Flavor <- as.integer(str_detect(pitts_res_unique$categories, "Local Flavor"))
pitts_res_unique$Category.Italian <- as.integer(str_detect(pitts_res_unique$categories, "Italian"))
pitts_res_unique$Category.Pizza <- as.integer(str_detect(pitts_res_unique$categories, "Pizza"))
pitts_res_unique$Category.Cafes <- as.integer(str_detect(pitts_res_unique$categories, "Cafes"))
pitts_res_unique$Category.Fast_Food <- as.integer(str_detect(pitts_res_unique$categories, "Fast Food"))
pitts_res_unique$Category.Breakfast___Brunch <- as.integer(str_detect(pitts_res_unique$categories, "Breakfast & Brunch"))
pitts_res_unique$Category.Donuts <- as.integer(str_detect(pitts_res_unique$categories, "Donuts"))
pitts_res_unique$Category.Coffee___Tea <- as.integer(str_detect(pitts_res_unique$categories, "Coffee & Tea"))
pitts_res_unique$Category.Seafood <- as.integer(str_detect(pitts_res_unique$categories, "Seafood"))
pitts_res_unique$Category.Bakeries <- as.integer(str_detect(pitts_res_unique$categories, "Bakeries"))
pitts_res_unique$Category.Barbeque <- as.integer(str_detect(pitts_res_unique$categories, "Barbeque"))
pitts_res_unique$Category.Vegan <- as.integer(str_detect(pitts_res_unique$categories, "Vegan"))
pitts_res_unique$Category.Indian <- as.integer(str_detect(pitts_res_unique$categories, "Indian"))
pitts_res_unique$Category.Chinese <- as.integer(str_detect(pitts_res_unique$categories, "Chinese"))
pitts_res_unique$Category.Vegetarian <- as.integer(str_detect(pitts_res_unique$categories, "Vegetarian"))
pitts_res_unique$Category.Latin_American <- as.integer(str_detect(pitts_res_unique$categories, "Latin American"))
pitts_res_unique$Category.Delis <- as.integer(str_detect(pitts_res_unique$categories, "Delis"))
pitts_res_unique$Category.Mediterranean <- as.integer(str_detect(pitts_res_unique$categories, "Mediterranean"))
pitts_res_unique$Category.Greek <- as.integer(str_detect(pitts_res_unique$categories, "Greek"))
pitts_res_unique$Category.Middle_Eastern <- as.integer(str_detect(pitts_res_unique$categories, "Middle Eastern"))
pitts_res_unique$Category.Desserts <- as.integer(str_detect(pitts_res_unique$categories, "Desserts"))
pitts_res_unique$Category.Food_Trucks <- as.integer(str_detect(pitts_res_unique$categories, "Food Trucks"))
pitts_res_unique$Category.Burgers <- as.integer(str_detect(pitts_res_unique$categories, "Burgers"))
pitts_res_unique$Category.Hot_Dogs <- as.integer(str_detect(pitts_res_unique$categories, "Hot Dogs"))
pitts_res_unique$Category.Steakhouses <- as.integer(str_detect(pitts_res_unique$categories, "Steakhouses"))
pitts_res_unique$Category.Soup <- as.integer(str_detect(pitts_res_unique$categories, "Soup"))
pitts_res_unique$Category.Noodles <- as.integer(str_detect(pitts_res_unique$categories, "Noodles"))
pitts_res_unique$Category.Buffets <- as.integer(str_detect(pitts_res_unique$categories, "Buffets"))
pitts_res_unique$Category.Thai <- as.integer(str_detect(pitts_res_unique$categories, "Thai"))
pitts_res_unique$Category.Cafeteria <- as.integer(str_detect(pitts_res_unique$categories, "Cafeteria"))
pitts_res_unique$Category.Diners <- as.integer(str_detect(pitts_res_unique$categories, "Diners"))
pitts_res_unique$Category.Korean <- as.integer(str_detect(pitts_res_unique$categories, "Korean"))
pitts_res_unique$Category.French <- as.integer(str_detect(pitts_res_unique$categories, "French"))
pitts_res_unique$Category.Tex_Mex <- as.integer(str_detect(pitts_res_unique$categories, "Tex-Mex"))
pitts_res_unique$Category.Caribbean <- as.integer(str_detect(pitts_res_unique$categories, "Caribbean"))
pitts_res_unique$Category.Beer <- as.integer(str_detect(pitts_res_unique$categories, "Beer"))
pitts_res_unique$Category.Ramen <- as.integer(str_detect(pitts_res_unique$categories, "Ramen"))
pitts_res_unique$Category.Vietnamese <- as.integer(str_detect(pitts_res_unique$categories, "Vietnamese"))
pitts_res_unique$Category.Spanish <- as.integer(str_detect(pitts_res_unique$categories, "Spanish"))
pitts_res_unique$Category.Taiwanese <- as.integer(str_detect(pitts_res_unique$categories, "Taiwanese"))
pitts_res_unique$Category.Fish___Chips <- as.integer(str_detect(pitts_res_unique$categories, "Fish & Chips"))
pitts_res_unique$Category.Tacos <- as.integer(str_detect(pitts_res_unique$categories, "Tacos"))
pitts_res_unique$Category.Hot_Pot <- as.integer(str_detect(pitts_res_unique$categories, "Hot Pot"))
pitts_res_unique$Category.Cantonese <- as.integer(str_detect(pitts_res_unique$categories, "Cantonese"))
pitts_res_unique$Attribute.BusinessAcceptsCreditCards__True <- as.integer(str_detect(pitts_res_unique$attributes, "BusinessAcceptsCreditCards: True"))
pitts_res_unique$Attribute.ByAppointmentOnly__True <- as.integer(str_detect(pitts_res_unique$attributes, "ByAppointmentOnly: True"))
pitts_res_unique$Attribute.DogsAllowed__True <- as.integer(str_detect(pitts_res_unique$attributes, "DogsAllowed: True"))
pitts_res_unique$Attribute.DriveThru__True <- as.integer(str_detect(pitts_res_unique$attributes, "DriveThru: True"))
pitts_res_unique$Attribute.GoodForDancing__True <- as.integer(str_detect(pitts_res_unique$attributes, "GoodForDancing: True"))
pitts_res_unique$Attribute.GoodForKids__True <- as.integer(str_detect(pitts_res_unique$attributes, "GoodForKids: True"))
pitts_res_unique$Attribute.HappyHour__True <- as.integer(str_detect(pitts_res_unique$attributes, "HappyHour: True"))
pitts_res_unique$Attribute.HasTV__True <- as.integer(str_detect(pitts_res_unique$attributes, "HasTV: True"))
pitts_res_unique$Attribute.Open24Hours__True <- as.integer(str_detect(pitts_res_unique$attributes, "Open24Hours: True"))
pitts_res_unique$Attribute.OutdoorSeating__True <- as.integer(str_detect(pitts_res_unique$attributes, "OutdoorSeating: True"))
pitts_res_unique$Attribute.RestaurantsAttire__casual <- as.integer(str_detect(pitts_res_unique$attributes, "RestaurantsAttire: casual"))
pitts_res_unique$Attribute.RestaurantsAttire__dressy <- as.integer(str_detect(pitts_res_unique$attributes, "RestaurantsAttire: dressy"))
pitts_res_unique$Attribute.RestaurantsAttire__formal <- as.integer(str_detect(pitts_res_unique$attributes, "RestaurantsAttire: formal"))
pitts_res_unique$Attribute.RestaurantsCounterService__True <- as.integer(str_detect(pitts_res_unique$attributes, "RestaurantsCounterService: True"))
pitts_res_unique$Attribute.RestaurantsDelivery__True <- as.integer(str_detect(pitts_res_unique$attributes, "RestaurantsDelivery: True"))
pitts_res_unique$Attribute.RestaurantsGoodForGroups__True <- as.integer(str_detect(pitts_res_unique$attributes, "RestaurantsGoodForGroups: True"))
pitts_res_unique$Attribute.RestaurantsPriceRange2__1 <- as.integer(str_detect(pitts_res_unique$attributes, "RestaurantsPriceRange2: 1"))
pitts_res_unique$Attribute.RestaurantsPriceRange2__2 <- as.integer(str_detect(pitts_res_unique$attributes, "RestaurantsPriceRange2: 2"))
pitts_res_unique$Attribute.RestaurantsPriceRange2__3 <- as.integer(str_detect(pitts_res_unique$attributes, "RestaurantsPriceRange2: 3"))
pitts_res_unique$Attribute.RestaurantsPriceRange2__4 <- as.integer(str_detect(pitts_res_unique$attributes, "RestaurantsPriceRange2: 4"))
pitts_res_unique$Attribute.RestaurantsReservations__True <- as.integer(str_detect(pitts_res_unique$attributes, "RestaurantsReservations: True"))
pitts_res_unique$Attribute.RestaurantsTableService__True <- as.integer(str_detect(pitts_res_unique$attributes, "RestaurantsTableService: True"))
pitts_res_unique$Attribute.RestaurantsTakeOut__True <- as.integer(str_detect(pitts_res_unique$attributes, "RestaurantsTakeOut: True"))
pitts_res_unique$Attribute.Smoking__yes <- as.integer(str_detect(pitts_res_unique$attributes, "Smoking: yes"))
pitts_res_unique$Attribute.WiFi__free <- as.integer(str_detect(pitts_res_unique$attributes, "WiFi: free"))
pitts_res_unique$Attribute.BusinessParking_street <- as.integer(str_detect(pitts_res_unique$attributes, "'street': True"))
pitts_res_unique$Attribute.Music_dj <- as.integer(str_detect(pitts_res_unique$attributes, "'dj': True"))
pitts_res_unique$neighborhood <- as.factor(pitts_res_unique$neighborhood)
pitts_res_unique.train <- pitts_res_unique[1:nrow(train), ]              #get training set
pitts_res_unique.test <- pitts_res_unique[-c(1:nrow(train)), ]    #get test set
pitts_res_unique.train$stars = stars
pitts_res_unique.train <- pitts_res_unique.train[,-c(1,2,4,5,6,7,8,9,11,12,13,14,1,16)]
pitts_res_unique.test <- pitts_res_unique.test[,-c(1,2,4,5,6,7,8,9,11,12,13,14,1,16)]
set.seed(123)
rindex = sample(1:nrow(pitts_res_unique.train), round(nrow(pitts_res_unique.train)*0.7), replace = FALSE)
pitts_res_unique.train.train = pitts_res_unique.train[rindex,]
pitts_res_unique.train.test = pitts_res_unique.train[-rindex,]
business.train.business_id = pitts_res_unique.train.train$business_id
business.test.business_id = pitts_res_unique.train.test$business_id
set.seed(123)
TrainOrTest = yelp$business_id %in% business.train.business_id
mcterms.train = mcterms[TrainOrTest, ]
mcterms.test = mcterms[!TrainOrTest, ]
business.id.train = yelp$business_id[TrainOrTest]
business.id.test = yelp$business_id[!TrainOrTest]
stars.train = yelp$stars[TrainOrTest]
stars.test = yelp$stars[!TrainOrTest]
posReviewstrain = mcterms.train[(stars.train >= 4), ]
negReviewstrain = mcterms.train[(stars.train <= 2), ]
posReviewstrain = posReviewstrain[rowSums(posReviewstrain) != 0,]
negReviewstrain = negReviewstrain[rowSums(negReviewstrain) != 0,]
posFreqtrain = prop.table(as.matrix(posReviewstrain), margin = 1)
negFreqtrain = prop.table(as.matrix(negReviewstrain), margin = 1)
posColsumstrain = colSums(posFreqtrain)/nrow(posFreqtrain)
negColsumstrain = colSums(negFreqtrain)/nrow(negFreqtrain)
negWords = names(sort(posColsumstrain - negColsumstrain, decreasing = F))[1:100]
posWords = names(sort(posColsumstrain - negColsumstrain, decreasing = T))[1:100]
PosNegWords = c(posWords, negWords)
PosNegTrain.X = mcterms.train[,which(colnames(mcterms) %in% PosNegWords)]
PosNegTest.X = mcterms.test[,which(colnames(mcterms) %in% PosNegWords)]
PosNegTrain.y = stars.train
PosNegTest.y = stars.test
PosNegTrain.business.id = business.id.train
PosNegTest.business.id = business.id.test
summary(rowSums(PosNegTrain.X))
PosNegTrain.manywordsindex = rowSums(PosNegTrain.X) >= 9
PosNegTrain.X = PosNegTrain.X[PosNegTrain.manywordsindex,]
PosNegTrain.y = PosNegTrain.y[PosNegTrain.manywordsindex]
PosNegTrain.business.id = PosNegTrain.business.id[PosNegTrain.manywordsindex]
PosNegTrain.data = data.frame(as.data.frame(PosNegTrain.X))
PosNegTrain.data$stars = PosNegTrain.y
PosNegTest.data = as.data.frame(PosNegTest.X)
library(rpart)
library(rpart.plot)
modeltree <- rpart(stars~., data=PosNegTrain.data)
rpart.plot(modeltree)
rpartpredictions <- predict(modeltree,PosNegTest.data, type = "class")
rpartpredictions <- predict(modeltree,PosNegTest.data)
rpPredictions = as.numeric(rpPredictions)
rpartpredictions
rfEPE = mean((rpartPredictions - PosNegTest.y)^2)
rpartPredictions = as.numeric(rfPredictions)
rpartPredictions = as.numeric(rpartPredictions)
rpartpredictions <- predict(modeltree,PosNegTest.data)
rpartPredictions = as.numeric(rpartpredictions)
rfEPE = mean((rpartPredictions - PosNegTest.y)^2)
rfEPE
library(randomForest)
rfModel<-randomForest(PosNegTrain.X, as.factor(PosNegTrain.y), ntree=1000)
rfPredictions<-predict(rfModel,newdata=PosNegTest.X)
rfPredictions = as.numeric(rfPredictions)
rfEPE = mean((rfPredictions - PosNegTest.y)^2)
rfEPE
library(gbm)
gbmModel.BusinessScore<-gbm(stars~.,data=pitts_res_unique.train.train.data, distribution = "tdist",
interaction.depth=4, n.trees=100,shrinkage=.11,verbose=FALSE)
cccccc = yelp = read.csv("yelp_academic_dataset_user.csv", header = TRUE)
View(cccccc)
